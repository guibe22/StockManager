@page "/R_Productos"
@page "/R_Productos/{ProductoId:int}"

@inject CategoriasBLL categoriasBLL
@inject ProveedoresBLL proveedoresBLL
@inject ProductosBLL productosBLL

<div class="d-flex justify-content-end ">
    <div class="zoom d-flex">
      <RadzenDropDown TValue="int" class="w-100 zoom "  @ref=@radzenDropDown 
            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
            Data=@productos TextProperty="Nombre" ValueProperty="ProductoId" AllowClear="true" SearchTextChanged="@(args => searchTextChanged(args))"
            @bind-value="productoId"
                    />
        <RadzenButton Icon="search"  Style=" width: 40px;  height: 39px; font-size: 16px;" Click="Buscar" />
    </div>
</div>

  


<RadzenStack >  
    <RadzenCard Class="rz-my-auto rz-mx-auto bordes " style=" background-image: linear-gradient(to right, #9d8f82 , rgb(195, 105, 36)  );"> 
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0" Class="rz-p-0 " >
            <RadzenLabel Text="REGISTRO DE PRODUCTOS" Style=" font-size: 25px; font-weight: bold; margin-bottom: 10px; color:rgb(245, 242, 242);" />
        </RadzenStack>
        <RadzenCard class=" rz-shadow-0 rz-border-radius-0 rz-p-8 " style="margin: 1rem calc(-1 * var(--rz-card-padding)); background-image: linear-gradient(173deg, #ce9051ac 0%, #fbfff1 100%);">
             <RadzenRow RowGap="5">
                <RadzenColumn SizeSM="6">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Codigo Producto:</RadzenText>
                    <RadzenTextBox  class="w-100 zoom " @bind-Value="producto.CodigoProducto" />
                </RadzenColumn>
                <RadzenColumn SizeSM="6">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Codigo Barra:</RadzenText>
                    <RadzenTextBox  class="w-100 zoom " @bind-Value="producto.CodigoBarra" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow RowGap="5">
                <RadzenColumn SizeSM="6">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Nombre:</RadzenText>
                    <RadzenTextBox  class="w-100 zoom " @bind-Value="producto.Nombre" />
                </RadzenColumn>
                <RadzenColumn SizeSM="6">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Precio:</RadzenText>
                    <RadzenNumeric  class="w-100 zoom " @bind-Value="producto.Precio" />
                </RadzenColumn>
                <RadzenColumn SizeSM="6">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Categoria:</RadzenText>
                    <RadzenDropDown TValue="int"  class="w-100 zoom " @ref=@radzenDropDown 
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                        Data=@categorias TextProperty="Nombre" ValueProperty="CategoriaId" AllowClear="true" SearchTextChanged="@(args => searchTextChanged(args))"
                        @bind-Value="@producto.CategoriaId"
                    />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow RowGap="5">
                <RadzenColumn SizeSM="6">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Fecha:</RadzenText>
                    <RadzenDatePicker TValue="DateTime"   class="w-100 zoom "  style="width: 190px;" @bind-Value="producto.Fecha"/>
                </RadzenColumn>
            </RadzenRow>

        </RadzenCard>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0">
            <ButtonTemplate ColorParameter="#007bff" TextParameter="NUEVO" IconParameter="add" OnClickHandler="Nuevo"  />
            <ButtonTemplate ColorParameter="#28a745" TextParameter="GUARDAR" IconParameter="save" OnClickHandler="Guardar"  />
            <ButtonTemplate ColorParameter="#dc3545" TextParameter="ELIMINAR" IconParameter="delete" OnClickHandler="Eliminar" />
        </RadzenStack>
    </RadzenCard>
</RadzenStack>

@code {
    [Parameter]
    public int productoId { get; set; }
    public Productos producto { get; set; } = new Productos();  

    List<Categorias> categorias = new List<Categorias>();
    List<Productos> productos = new List<Productos>();

    string? searchTextStatus;
    RadzenDropDown<int>? radzenDropDown;
    protected override void OnInitialized()
    {
        categorias = categoriasBLL.GetList(o=> o.Eliminado==false);
        productos = productosBLL.GetList(o=> o.Eliminado==false);
        if(productoId!=0){
            Buscar();
        }
        else{
            producto.Fecha=DateTime.Now;
        }
    }
    void searchTextChanged(string text)
    {
        searchTextStatus = $"Search text: {text}";
        StateHasChanged();
    }
    void Guardar(){
        if(!Validar()){return;}
        if(productosBLL.Guardar(producto)){
            Nuevo();
            productos = productosBLL.GetList(o=> o.Eliminado==false);
        }
    }
    void Nuevo(){
        producto = new Productos();
        producto.Fecha = DateTime.Now;
        StateHasChanged();
    }
   
      void Eliminar(){
        if(productosBLL.Existe(producto.ProductoId)){

         if(productosBLL.Eliminar(producto)){
            Nuevo();
    }
    }
    }

    bool Validar(){
        bool esValido = true;
        
        if(producto.CategoriaId==0){esValido = false;}
        return esValido;
    }
    void Buscar(){
        var productoFound = productosBLL.Buscar(this.productoId);

        if(productoFound!=null){
            producto = productoFound;
        }
        Console.WriteLine(producto.ProductoId);
    }
}

