// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StockManager.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230614034739_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Catalogos", b =>
                {
                    b.Property<int>("CatalogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("CatalogoId");

                    b.ToTable("Catalogos");
                });

            modelBuilder.Entity("Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Descripcion = "Productos relacionados con herramientas manuales y eléctricas.",
                            Eliminado = false,
                            Nombre = "Herramientas"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Descripcion = "Materiales necesarios para proyectos de construcción y remodelación.",
                            Eliminado = false,
                            Nombre = "Materiales de construcción"
                        },
                        new
                        {
                            CategoriaId = 3,
                            Descripcion = "Productos para fijar y pegar materiales, como tornillos, clavos y adhesivos.",
                            Eliminado = false,
                            Nombre = "Fijaciones y adhesivos"
                        },
                        new
                        {
                            CategoriaId = 4,
                            Descripcion = "Productos para pintar y embellecer superficies, incluyendo pinturas y barnices.",
                            Eliminado = false,
                            Nombre = "Pinturas y acabados"
                        },
                        new
                        {
                            CategoriaId = 5,
                            Descripcion = "Productos para sistemas de plomería, como tuberías, grifos y accesorios.",
                            Eliminado = false,
                            Nombre = "Fontanería"
                        },
                        new
                        {
                            CategoriaId = 6,
                            Descripcion = "Productos relacionados con iluminación, cableado eléctrico y accesorios.",
                            Eliminado = false,
                            Nombre = "Iluminación y electricidad"
                        },
                        new
                        {
                            CategoriaId = 7,
                            Descripcion = "Productos para la seguridad del hogar y protección personal, como cerraduras y cascos.",
                            Eliminado = false,
                            Nombre = "Seguridad y protección"
                        },
                        new
                        {
                            CategoriaId = 8,
                            Descripcion = "Herramientas y productos para el cuidado y mantenimiento de jardines y áreas verdes.",
                            Eliminado = false,
                            Nombre = "Ferretería de jardín"
                        },
                        new
                        {
                            CategoriaId = 9,
                            Descripcion = "Productos para puertas, ventanas y muebles, como manijas, bisagras y cierres.",
                            Eliminado = false,
                            Nombre = "Herrajes y accesorios"
                        },
                        new
                        {
                            CategoriaId = 10,
                            Descripcion = "Equipos de protección personal para trabajos industriales y de construcción.",
                            Eliminado = false,
                            Nombre = "Protección laboral"
                        },
                        new
                        {
                            CategoriaId = 11,
                            Descripcion = "Máquinas y equipos para soldadura y trabajos de metal.",
                            Eliminado = false,
                            Nombre = "Equipos de soldadura"
                        },
                        new
                        {
                            CategoriaId = 12,
                            Descripcion = "Productos químicos y utensilios para la limpieza y mantenimiento del hogar y oficina.",
                            Eliminado = false,
                            Nombre = "Productos de limpieza"
                        },
                        new
                        {
                            CategoriaId = 13,
                            Descripcion = "Productos y herramientas para el mantenimiento y reparación de vehículos.",
                            Eliminado = false,
                            Nombre = "Ferretería automotriz"
                        },
                        new
                        {
                            CategoriaId = 14,
                            Descripcion = "Productos para proteger y asegurar puertas y ventanas.",
                            Eliminado = false,
                            Nombre = "Cerraduras y sistemas de seguridad"
                        },
                        new
                        {
                            CategoriaId = 15,
                            Descripcion = "Herramientas para corte y precisión, como sierras y cuchillas.",
                            Eliminado = false,
                            Nombre = "Herramientas de corte"
                        },
                        new
                        {
                            CategoriaId = 16,
                            Descripcion = "Productos y componentes eléctricos, como cables, interruptores y enchufes.",
                            Eliminado = false,
                            Nombre = "Suministros eléctricos"
                        },
                        new
                        {
                            CategoriaId = 17,
                            Descripcion = "Materiales para pisos y revestimientos, como baldosas y laminados.",
                            Eliminado = false,
                            Nombre = "Pisos y revestimientos"
                        },
                        new
                        {
                            CategoriaId = 18,
                            Descripcion = "Herramientas para el cuidado y mantenimiento del jardín, como podadoras y cortacéspedes.",
                            Eliminado = false,
                            Nombre = "Herramientas de jardín"
                        },
                        new
                        {
                            CategoriaId = 19,
                            Descripcion = "Tornillos de diferentes tipos y tamaños para diversas aplicaciones.",
                            Eliminado = false,
                            Nombre = "Tornillería"
                        },
                        new
                        {
                            CategoriaId = 20,
                            Descripcion = "Instrumentos para medir longitudes, ángulos y dimensiones.",
                            Eliminado = false,
                            Nombre = "Herramientas de medición"
                        },
                        new
                        {
                            CategoriaId = 21,
                            Descripcion = "Accesorios y suministros para pintar, como rodillos y brochas.",
                            Eliminado = false,
                            Nombre = "Suministros de pintura"
                        },
                        new
                        {
                            CategoriaId = 22,
                            Descripcion = "Suministros para sistemas de plomería, como tuberías y accesorios de conexión.",
                            Eliminado = false,
                            Nombre = "Plomería y accesorios"
                        },
                        new
                        {
                            CategoriaId = 23,
                            Descripcion = "Equipos y máscaras para proteger la respiración en entornos contaminados.",
                            Eliminado = false,
                            Nombre = "Protección respiratoria"
                        },
                        new
                        {
                            CategoriaId = 24,
                            Descripcion = "Herramientas para trabajos de carpintería, como sierras y cepillos.",
                            Eliminado = false,
                            Nombre = "Herramientas de carpintería"
                        },
                        new
                        {
                            CategoriaId = 25,
                            Descripcion = "Productos para lijar y pulir superficies, como papel de lija y discos abrasivos.",
                            Eliminado = false,
                            Nombre = "Abrasivos y lijado"
                        },
                        new
                        {
                            CategoriaId = 26,
                            Descripcion = "Productos para mejorar y complementar ventanas, como persianas y mosquiteros.",
                            Eliminado = false,
                            Nombre = "Accesorios para ventanas"
                        },
                        new
                        {
                            CategoriaId = 27,
                            Descripcion = "Productos y equipos para actividades náuticas y marítimas.",
                            Eliminado = false,
                            Nombre = "Ferretería marina"
                        },
                        new
                        {
                            CategoriaId = 28,
                            Descripcion = "Herramientas para trabajos de albañilería, como llanas y paletas.",
                            Eliminado = false,
                            Nombre = "Herramientas de albañilería"
                        },
                        new
                        {
                            CategoriaId = 29,
                            Descripcion = "Accesorios y suministros para trabajos de soldadura, como electrodos y soldaduras.",
                            Eliminado = false,
                            Nombre = "Suministros de soldadura"
                        },
                        new
                        {
                            CategoriaId = 30,
                            Descripcion = "Equipos y dispositivos para la seguridad personal y en el lugar de trabajo.",
                            Eliminado = false,
                            Nombre = "Productos de seguridad"
                        },
                        new
                        {
                            CategoriaId = 31,
                            Descripcion = "Herramientas que funcionan con aire comprimido, como pistolas de aire y compresores.",
                            Eliminado = false,
                            Nombre = "Herramientas de aire comprimido"
                        },
                        new
                        {
                            CategoriaId = 32,
                            Descripcion = "Productos y suministros para el cuidado de jardines y plantas.",
                            Eliminado = false,
                            Nombre = "Suministros de jardinería"
                        },
                        new
                        {
                            CategoriaId = 33,
                            Descripcion = "Productos y accesorios para puertas, como cerraduras y bisagras.",
                            Eliminado = false,
                            Nombre = "Ferretería para puertas"
                        },
                        new
                        {
                            CategoriaId = 34,
                            Descripcion = "Herramientas especializadas para trabajos eléctricos, como alicates y pelacables.",
                            Eliminado = false,
                            Nombre = "Herramientas de electricista"
                        },
                        new
                        {
                            CategoriaId = 35,
                            Descripcion = "Productos y sistemas para el riego de jardines y áreas verdes.",
                            Eliminado = false,
                            Nombre = "Sistemas de riego"
                        },
                        new
                        {
                            CategoriaId = 36,
                            Descripcion = "Herramientas para demolición y trabajos pesados, como martillos y cinceles.",
                            Eliminado = false,
                            Nombre = "Herramientas de demolición"
                        },
                        new
                        {
                            CategoriaId = 37,
                            Descripcion = "Productos y utensilios para la limpieza y mantenimiento de espacios.",
                            Eliminado = false,
                            Nombre = "Suministros de limpieza"
                        },
                        new
                        {
                            CategoriaId = 38,
                            Descripcion = "Herramientas especializadas para cortar azulejos y cerámicas.",
                            Eliminado = false,
                            Nombre = "Herramientas de corte de azulejos"
                        },
                        new
                        {
                            CategoriaId = 39,
                            Descripcion = "Suministros generales para proyectos de construcción y remodelación.",
                            Eliminado = false,
                            Nombre = "Suministros de construcción"
                        },
                        new
                        {
                            CategoriaId = 40,
                            Descripcion = "Herramientas eléctricas para el cuidado del jardín, como cortasetos y sopladores.",
                            Eliminado = false,
                            Nombre = "Herramientas de jardín eléctricas"
                        });
                });

            modelBuilder.Entity("Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Compras", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("InventarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompraId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("DetalleOrdenDeCompras", b =>
                {
                    b.Property<int>("DetalleOrdenDeCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdenDeCompraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Solicitante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DetalleOrdenDeCompraId");

                    b.HasIndex("OrdenDeCompraId");

                    b.ToTable("DetalleOrdenDeCompras");
                });

            modelBuilder.Entity("DetallesCompras", b =>
                {
                    b.Property<int>("DetalleCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventarioId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SubTotal")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleCompraId");

                    b.HasIndex("CompraId");

                    b.ToTable("DetallesCompras");
                });

            modelBuilder.Entity("DetallesVenta", b =>
                {
                    b.Property<int>("DetalleVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SubTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("VentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DetalleVentaId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallesVenta");
                });

            modelBuilder.Entity("Inventarios", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadMinima")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatalogoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaActualizado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventarioId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("OrdenDeCompras", b =>
                {
                    b.Property<int>("OrdenDeCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CostoTotal")
                        .HasColumnType("REAL");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("OrdenDeCompraId");

                    b.ToTable("OrdenDeCompras");
                });

            modelBuilder.Entity("Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoProducto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Proveedores", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Ubicaciones", b =>
                {
                    b.Property<int>("UbicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estante")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pasillo")
                        .HasColumnType("TEXT");

                    b.HasKey("UbicacionId");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Ventas", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VentaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("DetalleOrdenDeCompras", b =>
                {
                    b.HasOne("OrdenDeCompras", null)
                        .WithMany("DetalleOrdenDeCompras")
                        .HasForeignKey("OrdenDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DetallesCompras", b =>
                {
                    b.HasOne("Compras", null)
                        .WithMany("DetallesCompras")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DetallesVenta", b =>
                {
                    b.HasOne("Ventas", null)
                        .WithMany("detallesVentas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Compras", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("OrdenDeCompras", b =>
                {
                    b.Navigation("DetalleOrdenDeCompras");
                });

            modelBuilder.Entity("Ventas", b =>
                {
                    b.Navigation("detallesVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
