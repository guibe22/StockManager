// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StockManager.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230614132552_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Catalogos", b =>
                {
                    b.Property<int>("CatalogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("CatalogoId");

                    b.ToTable("Catalogos");

                    b.HasData(
                        new
                        {
                            CatalogoId = 1,
                            Descripcion = "Productos destacados para la temporada de verano",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9838),
                            Nombre = "Catálogo de Verano"
                        },
                        new
                        {
                            CatalogoId = 2,
                            Descripcion = "Grandes descuentos en productos de invierno",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9841),
                            Nombre = "Ofertas de Invierno"
                        },
                        new
                        {
                            CatalogoId = 3,
                            Descripcion = "Los últimos dispositivos electrónicos y gadgets",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9844),
                            Nombre = "Catálogo de Electrónicos"
                        },
                        new
                        {
                            CatalogoId = 4,
                            Descripcion = "Promociones especiales para la temporada de primavera",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9847),
                            Nombre = "Promociones de Primavera"
                        },
                        new
                        {
                            CatalogoId = 5,
                            Descripcion = "Tendencias de moda para hombres y mujeres",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9850),
                            Nombre = "Catálogo de Moda"
                        },
                        new
                        {
                            CatalogoId = 6,
                            Descripcion = "Ideas y productos para decorar tu hogar",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9852),
                            Nombre = "Catálogo de Decoración"
                        },
                        new
                        {
                            CatalogoId = 7,
                            Descripcion = "Descuentos especiales en productos de temporada",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9855),
                            Nombre = "Promociones de Otoño"
                        },
                        new
                        {
                            CatalogoId = 8,
                            Descripcion = "Los juguetes más populares para todas las edades",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9858),
                            Nombre = "Catálogo de Juguetes"
                        },
                        new
                        {
                            CatalogoId = 9,
                            Descripcion = "Grandes descuentos en el día de Black Friday",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9860),
                            Nombre = "Ofertas de Black Friday"
                        },
                        new
                        {
                            CatalogoId = 10,
                            Descripcion = "Los últimos avances en tecnología y electrónica",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9863),
                            Nombre = "Catálogo de Tecnología"
                        },
                        new
                        {
                            CatalogoId = 11,
                            Descripcion = "Las últimas tendencias en moda para la temporada primavera-verano",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9866),
                            Nombre = "Catálogo de Moda Primavera-Verano"
                        },
                        new
                        {
                            CatalogoId = 12,
                            Descripcion = "Amplia selección de electrodomésticos para el hogar",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9869),
                            Nombre = "Catálogo de Electrodomésticos"
                        },
                        new
                        {
                            CatalogoId = 13,
                            Descripcion = "Descuentos especiales para cerrar el año con grandes ahorros",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9872),
                            Nombre = "Ofertas de Fin de Año"
                        },
                        new
                        {
                            CatalogoId = 14,
                            Descripcion = "Los mejores libros para disfrutar y ampliar tu biblioteca",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9874),
                            Nombre = "Catálogo de Libros"
                        },
                        new
                        {
                            CatalogoId = 15,
                            Descripcion = "Ofertas irresistibles para disfrutar del verano al máximo",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9877),
                            Nombre = "Promociones de Verano"
                        });
                });

            modelBuilder.Entity("Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Descripcion = "Productos relacionados con herramientas manuales y eléctricas.",
                            Eliminado = false,
                            Nombre = "Herramientas"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Descripcion = "Materiales necesarios para proyectos de construcción y remodelación.",
                            Eliminado = false,
                            Nombre = "Materiales de construcción"
                        },
                        new
                        {
                            CategoriaId = 3,
                            Descripcion = "Productos para fijar y pegar materiales, como tornillos, clavos y adhesivos.",
                            Eliminado = false,
                            Nombre = "Fijaciones y adhesivos"
                        },
                        new
                        {
                            CategoriaId = 4,
                            Descripcion = "Productos para pintar y embellecer superficies, incluyendo pinturas y barnices.",
                            Eliminado = false,
                            Nombre = "Pinturas y acabados"
                        },
                        new
                        {
                            CategoriaId = 5,
                            Descripcion = "Productos para sistemas de plomería, como tuberías, grifos y accesorios.",
                            Eliminado = false,
                            Nombre = "Fontanería"
                        },
                        new
                        {
                            CategoriaId = 6,
                            Descripcion = "Productos relacionados con iluminación, cableado eléctrico y accesorios.",
                            Eliminado = false,
                            Nombre = "Iluminación y electricidad"
                        },
                        new
                        {
                            CategoriaId = 7,
                            Descripcion = "Productos para la seguridad del hogar y protección personal, como cerraduras y cascos.",
                            Eliminado = false,
                            Nombre = "Seguridad y protección"
                        },
                        new
                        {
                            CategoriaId = 8,
                            Descripcion = "Herramientas y productos para el cuidado y mantenimiento de jardines y áreas verdes.",
                            Eliminado = false,
                            Nombre = "Ferretería de jardín"
                        },
                        new
                        {
                            CategoriaId = 9,
                            Descripcion = "Productos para puertas, ventanas y muebles, como manijas, bisagras y cierres.",
                            Eliminado = false,
                            Nombre = "Herrajes y accesorios"
                        },
                        new
                        {
                            CategoriaId = 10,
                            Descripcion = "Equipos de protección personal para trabajos industriales y de construcción.",
                            Eliminado = false,
                            Nombre = "Protección laboral"
                        },
                        new
                        {
                            CategoriaId = 11,
                            Descripcion = "Máquinas y equipos para soldadura y trabajos de metal.",
                            Eliminado = false,
                            Nombre = "Equipos de soldadura"
                        },
                        new
                        {
                            CategoriaId = 12,
                            Descripcion = "Productos químicos y utensilios para la limpieza y mantenimiento del hogar y oficina.",
                            Eliminado = false,
                            Nombre = "Productos de limpieza"
                        },
                        new
                        {
                            CategoriaId = 13,
                            Descripcion = "Productos y herramientas para el mantenimiento y reparación de vehículos.",
                            Eliminado = false,
                            Nombre = "Ferretería automotriz"
                        },
                        new
                        {
                            CategoriaId = 14,
                            Descripcion = "Productos para proteger y asegurar puertas y ventanas.",
                            Eliminado = false,
                            Nombre = "Cerraduras y sistemas de seguridad"
                        },
                        new
                        {
                            CategoriaId = 15,
                            Descripcion = "Herramientas para corte y precisión, como sierras y cuchillas.",
                            Eliminado = false,
                            Nombre = "Herramientas de corte"
                        },
                        new
                        {
                            CategoriaId = 16,
                            Descripcion = "Productos y componentes eléctricos, como cables, interruptores y enchufes.",
                            Eliminado = false,
                            Nombre = "Suministros eléctricos"
                        },
                        new
                        {
                            CategoriaId = 17,
                            Descripcion = "Materiales para pisos y revestimientos, como baldosas y laminados.",
                            Eliminado = false,
                            Nombre = "Pisos y revestimientos"
                        },
                        new
                        {
                            CategoriaId = 18,
                            Descripcion = "Herramientas para el cuidado y mantenimiento del jardín, como podadoras y cortacéspedes.",
                            Eliminado = false,
                            Nombre = "Herramientas de jardín"
                        },
                        new
                        {
                            CategoriaId = 19,
                            Descripcion = "Tornillos de diferentes tipos y tamaños para diversas aplicaciones.",
                            Eliminado = false,
                            Nombre = "Tornillería"
                        },
                        new
                        {
                            CategoriaId = 20,
                            Descripcion = "Instrumentos para medir longitudes, ángulos y dimensiones.",
                            Eliminado = false,
                            Nombre = "Herramientas de medición"
                        },
                        new
                        {
                            CategoriaId = 21,
                            Descripcion = "Accesorios y suministros para pintar, como rodillos y brochas.",
                            Eliminado = false,
                            Nombre = "Suministros de pintura"
                        },
                        new
                        {
                            CategoriaId = 22,
                            Descripcion = "Suministros para sistemas de plomería, como tuberías y accesorios de conexión.",
                            Eliminado = false,
                            Nombre = "Plomería y accesorios"
                        },
                        new
                        {
                            CategoriaId = 23,
                            Descripcion = "Equipos y máscaras para proteger la respiración en entornos contaminados.",
                            Eliminado = false,
                            Nombre = "Protección respiratoria"
                        },
                        new
                        {
                            CategoriaId = 24,
                            Descripcion = "Herramientas para trabajos de carpintería, como sierras y cepillos.",
                            Eliminado = false,
                            Nombre = "Herramientas de carpintería"
                        },
                        new
                        {
                            CategoriaId = 25,
                            Descripcion = "Productos para lijar y pulir superficies, como papel de lija y discos abrasivos.",
                            Eliminado = false,
                            Nombre = "Abrasivos y lijado"
                        },
                        new
                        {
                            CategoriaId = 26,
                            Descripcion = "Productos para mejorar y complementar ventanas, como persianas y mosquiteros.",
                            Eliminado = false,
                            Nombre = "Accesorios para ventanas"
                        },
                        new
                        {
                            CategoriaId = 27,
                            Descripcion = "Productos y equipos para actividades náuticas y marítimas.",
                            Eliminado = false,
                            Nombre = "Ferretería marina"
                        },
                        new
                        {
                            CategoriaId = 28,
                            Descripcion = "Herramientas para trabajos de albañilería, como llanas y paletas.",
                            Eliminado = false,
                            Nombre = "Herramientas de albañilería"
                        },
                        new
                        {
                            CategoriaId = 29,
                            Descripcion = "Accesorios y suministros para trabajos de soldadura, como electrodos y soldaduras.",
                            Eliminado = false,
                            Nombre = "Suministros de soldadura"
                        },
                        new
                        {
                            CategoriaId = 30,
                            Descripcion = "Equipos y dispositivos para la seguridad personal y en el lugar de trabajo.",
                            Eliminado = false,
                            Nombre = "Productos de seguridad"
                        },
                        new
                        {
                            CategoriaId = 31,
                            Descripcion = "Herramientas que funcionan con aire comprimido, como pistolas de aire y compresores.",
                            Eliminado = false,
                            Nombre = "Herramientas de aire comprimido"
                        },
                        new
                        {
                            CategoriaId = 32,
                            Descripcion = "Productos y suministros para el cuidado de jardines y plantas.",
                            Eliminado = false,
                            Nombre = "Suministros de jardinería"
                        },
                        new
                        {
                            CategoriaId = 33,
                            Descripcion = "Productos y accesorios para puertas, como cerraduras y bisagras.",
                            Eliminado = false,
                            Nombre = "Ferretería para puertas"
                        },
                        new
                        {
                            CategoriaId = 34,
                            Descripcion = "Herramientas especializadas para trabajos eléctricos, como alicates y pelacables.",
                            Eliminado = false,
                            Nombre = "Herramientas de electricista"
                        },
                        new
                        {
                            CategoriaId = 35,
                            Descripcion = "Productos y sistemas para el riego de jardines y áreas verdes.",
                            Eliminado = false,
                            Nombre = "Sistemas de riego"
                        },
                        new
                        {
                            CategoriaId = 36,
                            Descripcion = "Herramientas para demolición y trabajos pesados, como martillos y cinceles.",
                            Eliminado = false,
                            Nombre = "Herramientas de demolición"
                        },
                        new
                        {
                            CategoriaId = 37,
                            Descripcion = "Productos y utensilios para la limpieza y mantenimiento de espacios.",
                            Eliminado = false,
                            Nombre = "Suministros de limpieza"
                        },
                        new
                        {
                            CategoriaId = 38,
                            Descripcion = "Herramientas especializadas para cortar azulejos y cerámicas.",
                            Eliminado = false,
                            Nombre = "Herramientas de corte de azulejos"
                        },
                        new
                        {
                            CategoriaId = 39,
                            Descripcion = "Suministros generales para proyectos de construcción y remodelación.",
                            Eliminado = false,
                            Nombre = "Suministros de construcción"
                        },
                        new
                        {
                            CategoriaId = 40,
                            Descripcion = "Herramientas eléctricas para el cuidado del jardín, como cortasetos y sopladores.",
                            Eliminado = false,
                            Nombre = "Herramientas de jardín eléctricas"
                        });
                });

            modelBuilder.Entity("Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Apellido = "Doe",
                            Cedula = "1234567890",
                            Direccion = "123 Main St",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9614),
                            Nombre = "John",
                            Telefono = "555-1234"
                        },
                        new
                        {
                            ClienteId = 2,
                            Apellido = "Smith",
                            Cedula = "0987654321",
                            Direccion = "456 Elm St",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9621),
                            Nombre = "Jane",
                            Telefono = "555-5678"
                        },
                        new
                        {
                            ClienteId = 3,
                            Apellido = "Johnson",
                            Cedula = "9876543210",
                            Direccion = "789 Oak St",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9625),
                            Nombre = "Michael",
                            Telefono = "555-9012"
                        },
                        new
                        {
                            ClienteId = 4,
                            Apellido = "Brown",
                            Cedula = "0123456789",
                            Direccion = "321 Pine St",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9628),
                            Nombre = "Emily",
                            Telefono = "555-3456"
                        },
                        new
                        {
                            ClienteId = 5,
                            Apellido = "Miller",
                            Cedula = "4567890123",
                            Direccion = "654 Cedar St",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9631),
                            Nombre = "David",
                            Telefono = "555-7890"
                        },
                        new
                        {
                            ClienteId = 6,
                            Apellido = "Davis",
                            Cedula = "3210987654",
                            Direccion = "987 Maple Ave",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9635),
                            Nombre = "Sarah",
                            Telefono = "555-2345"
                        },
                        new
                        {
                            ClienteId = 7,
                            Apellido = "Wilson",
                            Cedula = "6789012345",
                            Direccion = "654 Oakwood Dr",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9638),
                            Nombre = "Christopher",
                            Telefono = "555-6789"
                        },
                        new
                        {
                            ClienteId = 8,
                            Apellido = "Taylor",
                            Cedula = "3456789012",
                            Direccion = "321 Elmwood Ln",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9642),
                            Nombre = "Jessica",
                            Telefono = "555-0123"
                        },
                        new
                        {
                            ClienteId = 9,
                            Apellido = "Anderson",
                            Cedula = "8901234567",
                            Direccion = "789 Birchwood Rd",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9645),
                            Nombre = "Matthew",
                            Telefono = "555-4567"
                        },
                        new
                        {
                            ClienteId = 10,
                            Apellido = "Thompson",
                            Cedula = "5678901234",
                            Direccion = "123 Cedarwood Ave",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9649),
                            Nombre = "Olivia",
                            Telefono = "555-8901"
                        },
                        new
                        {
                            ClienteId = 11,
                            Apellido = "Martinez",
                            Cedula = "4321098765",
                            Direccion = "456 Pine Lane",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9652),
                            Nombre = "Daniel",
                            Telefono = "555-3456"
                        },
                        new
                        {
                            ClienteId = 12,
                            Apellido = "Garcia",
                            Cedula = "5678901234",
                            Direccion = "789 Maple Rd",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9658),
                            Nombre = "Sophia",
                            Telefono = "555-7890"
                        },
                        new
                        {
                            ClienteId = 13,
                            Apellido = "Lopez",
                            Cedula = "8901234567",
                            Direccion = "321 Oakwood Dr",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9661),
                            Nombre = "Ethan",
                            Telefono = "555-0123"
                        },
                        new
                        {
                            ClienteId = 14,
                            Apellido = "Rodriguez",
                            Cedula = "6789012345",
                            Direccion = "654 Elmwood Ln",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9664),
                            Nombre = "Ava",
                            Telefono = "555-4567"
                        },
                        new
                        {
                            ClienteId = 15,
                            Apellido = "Hernandez",
                            Cedula = "3210987654",
                            Direccion = "987 Birchwood Ave",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9668),
                            Nombre = "Benjamin",
                            Telefono = "555-8901"
                        });
                });

            modelBuilder.Entity("Compras", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("InventarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompraId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("DetalleOrdenDeCompras", b =>
                {
                    b.Property<int>("DetalleOrdenDeCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdenDeCompraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Solicitante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DetalleOrdenDeCompraId");

                    b.HasIndex("OrdenDeCompraId");

                    b.ToTable("DetalleOrdenDeCompras");
                });

            modelBuilder.Entity("DetallesCompras", b =>
                {
                    b.Property<int>("DetalleCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventarioId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SubTotal")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleCompraId");

                    b.HasIndex("CompraId");

                    b.ToTable("DetallesCompras");
                });

            modelBuilder.Entity("DetallesVenta", b =>
                {
                    b.Property<int>("DetalleVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SubTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("VentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DetalleVentaId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallesVenta");
                });

            modelBuilder.Entity("Inventarios", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadMinima")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatalogoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaActualizado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventarioId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("OrdenDeCompras", b =>
                {
                    b.Property<int>("OrdenDeCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CostoTotal")
                        .HasColumnType("REAL");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("OrdenDeCompraId");

                    b.ToTable("OrdenDeCompras");
                });

            modelBuilder.Entity("Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoProducto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            CategoriaId = 1,
                            CodigoBarra = "123456789",
                            CodigoProducto = "ABC123",
                            Descripcion = "Martillo de acero con mango de madera",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9480),
                            Nombre = "Martillo"
                        },
                        new
                        {
                            ProductoId = 2,
                            CategoriaId = 2,
                            CodigoBarra = "987654321",
                            CodigoProducto = "XYZ789",
                            Descripcion = "Taladro eléctrico de alta potencia",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9500),
                            Nombre = "Taladro"
                        },
                        new
                        {
                            ProductoId = 3,
                            CategoriaId = 1,
                            CodigoBarra = "789123456",
                            CodigoProducto = "DEF456",
                            Descripcion = "Destornillador magnético con puntas intercambiables",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9504),
                            Nombre = "Destornillador"
                        },
                        new
                        {
                            ProductoId = 4,
                            CategoriaId = 2,
                            CodigoBarra = "654789123",
                            CodigoProducto = "GHI789",
                            Descripcion = "Sierra circular de alta velocidad para cortes precisos",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9507),
                            Nombre = "Sierra Circular"
                        },
                        new
                        {
                            ProductoId = 5,
                            CategoriaId = 20,
                            CodigoBarra = "246813579",
                            CodigoProducto = "JKL321",
                            Descripcion = "Cinta métrica retráctil de 5 metros",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9511),
                            Nombre = "Cinta Métrica"
                        },
                        new
                        {
                            ProductoId = 6,
                            CategoriaId = 4,
                            CodigoBarra = "135792468",
                            CodigoProducto = "MNO987",
                            Descripcion = "Pintura blanca mate para interiores",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9514),
                            Nombre = "Pintura Blanca"
                        },
                        new
                        {
                            ProductoId = 7,
                            CategoriaId = 9,
                            CodigoBarra = "369258147",
                            CodigoProducto = "PQR654",
                            Descripcion = "Llave ajustable de 10 pulgadas",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9519),
                            Nombre = "Llave Ajustable"
                        },
                        new
                        {
                            ProductoId = 8,
                            CategoriaId = 2,
                            CodigoBarra = "258741369",
                            CodigoProducto = "STU321",
                            Descripcion = "Broca de 8 mm para perforar madera",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9522),
                            Nombre = "Broca para Madera"
                        },
                        new
                        {
                            ProductoId = 9,
                            CategoriaId = 10,
                            CodigoBarra = "987123654",
                            CodigoProducto = "VWX987",
                            Descripcion = "Guantes de trabajo resistentes al corte, talla L",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9526),
                            Nombre = "Guantes de Trabajo"
                        },
                        new
                        {
                            ProductoId = 10,
                            CategoriaId = 28,
                            CodigoBarra = "741852963",
                            CodigoProducto = "XYZ123",
                            Descripcion = "Aspiradora robot inteligente con función de mapeo y limpieza programada",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9529),
                            Nombre = "Aspiradora Robot"
                        },
                        new
                        {
                            ProductoId = 11,
                            CategoriaId = 6,
                            CodigoBarra = "963258741",
                            CodigoProducto = "BCD789",
                            Descripcion = "Pistola de calor de 2000W para trabajos de secado y desoldado",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9532),
                            Nombre = "Pistola de Calor"
                        },
                        new
                        {
                            ProductoId = 12,
                            CategoriaId = 7,
                            CodigoBarra = "147852369",
                            CodigoProducto = "EFG987",
                            Descripcion = "Cerradura de seguridad para puertas con sistema de doble cerrojo",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9535),
                            Nombre = "Cerradura de Seguridad"
                        },
                        new
                        {
                            ProductoId = 13,
                            CategoriaId = 5,
                            CodigoBarra = "369741852",
                            CodigoProducto = "HIJ321",
                            Descripcion = "Tubería de PVC de 2 pulgadas, resistente a la corrosión",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9538),
                            Nombre = "Tubería de PVC"
                        },
                        new
                        {
                            ProductoId = 14,
                            CategoriaId = 21,
                            CodigoBarra = "852963741",
                            CodigoProducto = "KLM654",
                            Descripcion = "Rodillo de pintura de 9 pulgadas con mango ergonómico",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9542),
                            Nombre = "Rodillo de Pintura"
                        },
                        new
                        {
                            ProductoId = 15,
                            CategoriaId = 3,
                            CodigoBarra = "963741852",
                            CodigoProducto = "NOP789",
                            Descripcion = "Cinta adhesiva de doble cara de alta resistencia, 5 metros",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9545),
                            Nombre = "Cinta de Doble Cara"
                        });
                });

            modelBuilder.Entity("Proveedores", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            ProveedorId = 1,
                            Descripcion = "Proveedor de productos eléctricos",
                            Direccion = "123 Main Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9733),
                            Nombre = "ElectroSuministros S.A.",
                            RNC = "123456789",
                            Telefono = "555-1234"
                        },
                        new
                        {
                            ProveedorId = 2,
                            Descripcion = "Proveedor de materiales de construcción",
                            Direccion = "456 Oak Avenue",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9738),
                            Nombre = "ConstruMateriales C. por A.",
                            RNC = "987654321",
                            Telefono = "555-5678"
                        },
                        new
                        {
                            ProveedorId = 3,
                            Descripcion = "Proveedor de herramientas",
                            Direccion = "789 Pine Lane",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9742),
                            Nombre = "Herramientas Profesionales SRL",
                            RNC = "456789123",
                            Telefono = "555-9012"
                        },
                        new
                        {
                            ProveedorId = 4,
                            Descripcion = "Proveedor de productos químicos",
                            Direccion = "987 Elmwood Drive",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9746),
                            Nombre = "Productos Químicos Industriales SA",
                            RNC = "321098765",
                            Telefono = "555-3456"
                        },
                        new
                        {
                            ProveedorId = 5,
                            Descripcion = "Proveedor de suministros industriales",
                            Direccion = "543 Maple Avenue",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9749),
                            Nombre = "Suministros Industriales del Este",
                            RNC = "654321098",
                            Telefono = "555-7890"
                        },
                        new
                        {
                            ProveedorId = 6,
                            Descripcion = "Proveedor de productos de ferretería",
                            Direccion = "321 Cedar Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9752),
                            Nombre = "Ferretería La Construcción",
                            RNC = "876543210",
                            Telefono = "555-2345"
                        },
                        new
                        {
                            ProveedorId = 7,
                            Descripcion = "Proveedor de suministros eléctricos",
                            Direccion = "654 Oakwood Avenue",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9756),
                            Nombre = "Suministros Eléctricos García",
                            RNC = "210987654",
                            Telefono = "555-6789"
                        },
                        new
                        {
                            ProveedorId = 8,
                            Descripcion = "Proveedor de herramientas de mano",
                            Direccion = "987 Elm Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9759),
                            Nombre = "Herramientas Martínez",
                            RNC = "543210987",
                            Telefono = "555-0123"
                        },
                        new
                        {
                            ProveedorId = 9,
                            Descripcion = "Proveedor de materiales de construcción y acabados",
                            Direccion = "123 Pine Avenue",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9763),
                            Nombre = "Materiales y Acabados Modernos",
                            RNC = "876543219",
                            Telefono = "555-4567"
                        },
                        new
                        {
                            ProveedorId = 10,
                            Descripcion = "Proveedor de suministros industriales y herramientas",
                            Direccion = "543 Maple Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9767),
                            Nombre = "Suministros Industriales del Oeste",
                            RNC = "219876543",
                            Telefono = "555-8901"
                        },
                        new
                        {
                            ProveedorId = 11,
                            Descripcion = "Proveedor de productos de ferretería y herramientas",
                            Direccion = "789 Oakwood Avenue",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9771),
                            Nombre = "Ferretería González",
                            RNC = "765432109",
                            Telefono = "555-1234"
                        },
                        new
                        {
                            ProveedorId = 12,
                            Descripcion = "Proveedor de suministros industriales y equipos",
                            Direccion = "987 Cedar Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9774),
                            Nombre = "Distribuidora Industrial Rodríguez",
                            RNC = "109876543",
                            Telefono = "555-5678"
                        },
                        new
                        {
                            ProveedorId = 13,
                            Descripcion = "Proveedor de materiales de construcción y acabados",
                            Direccion = "456 Elm Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9777),
                            Nombre = "Materiales de Construcción Hernández",
                            RNC = "432109876",
                            Telefono = "555-9012"
                        },
                        new
                        {
                            ProveedorId = 14,
                            Descripcion = "Proveedor de suministros eléctricos y equipos",
                            Direccion = "210 Maple Avenue",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9780),
                            Nombre = "Suministros Eléctricos Sánchez",
                            RNC = "321098765",
                            Telefono = "555-3456"
                        },
                        new
                        {
                            ProveedorId = 15,
                            Descripcion = "Proveedor de herramientas y equipos industriales",
                            Direccion = "654 Pine Street",
                            Eliminado = false,
                            Fecha = new DateTime(2023, 6, 14, 9, 25, 51, 890, DateTimeKind.Local).AddTicks(9784),
                            Nombre = "Herramientas y Equipos Jiménez",
                            RNC = "654321098",
                            Telefono = "555-7890"
                        });
                });

            modelBuilder.Entity("Ubicaciones", b =>
                {
                    b.Property<int>("UbicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estante")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pasillo")
                        .HasColumnType("TEXT");

                    b.HasKey("UbicacionId");

                    b.ToTable("Ubicaciones");

                    b.HasData(
                        new
                        {
                            UbicacionId = 1,
                            Eliminado = false,
                            Estante = "E1",
                            Nivel = 1,
                            Ocupado = false,
                            Pasillo = "A"
                        },
                        new
                        {
                            UbicacionId = 2,
                            Eliminado = false,
                            Estante = "E2",
                            Nivel = 2,
                            Ocupado = false,
                            Pasillo = "B"
                        },
                        new
                        {
                            UbicacionId = 3,
                            Eliminado = false,
                            Estante = "E3",
                            Nivel = 1,
                            Ocupado = false,
                            Pasillo = "C"
                        },
                        new
                        {
                            UbicacionId = 4,
                            Eliminado = false,
                            Estante = "E1",
                            Nivel = 2,
                            Ocupado = false,
                            Pasillo = "A"
                        },
                        new
                        {
                            UbicacionId = 5,
                            Eliminado = false,
                            Estante = "E2",
                            Nivel = 1,
                            Ocupado = false,
                            Pasillo = "B"
                        },
                        new
                        {
                            UbicacionId = 6,
                            Eliminado = false,
                            Estante = "E4",
                            Nivel = 3,
                            Ocupado = false,
                            Pasillo = "D"
                        },
                        new
                        {
                            UbicacionId = 7,
                            Eliminado = false,
                            Estante = "E3",
                            Nivel = 2,
                            Ocupado = false,
                            Pasillo = "A"
                        },
                        new
                        {
                            UbicacionId = 8,
                            Eliminado = false,
                            Estante = "E2",
                            Nivel = 1,
                            Ocupado = false,
                            Pasillo = "C"
                        },
                        new
                        {
                            UbicacionId = 9,
                            Eliminado = false,
                            Estante = "E4",
                            Nivel = 2,
                            Ocupado = false,
                            Pasillo = "B"
                        },
                        new
                        {
                            UbicacionId = 10,
                            Eliminado = false,
                            Estante = "E1",
                            Nivel = 3,
                            Ocupado = false,
                            Pasillo = "D"
                        },
                        new
                        {
                            UbicacionId = 11,
                            Eliminado = false,
                            Estante = "E2",
                            Nivel = 4,
                            Ocupado = true,
                            Pasillo = "B"
                        },
                        new
                        {
                            UbicacionId = 12,
                            Eliminado = false,
                            Estante = "E3",
                            Nivel = 2,
                            Ocupado = false,
                            Pasillo = "C"
                        },
                        new
                        {
                            UbicacionId = 13,
                            Eliminado = false,
                            Estante = "E1",
                            Nivel = 1,
                            Ocupado = true,
                            Pasillo = "A"
                        },
                        new
                        {
                            UbicacionId = 14,
                            Eliminado = false,
                            Estante = "E4",
                            Nivel = 3,
                            Ocupado = false,
                            Pasillo = "D"
                        },
                        new
                        {
                            UbicacionId = 15,
                            Eliminado = false,
                            Estante = "E3",
                            Nivel = 2,
                            Ocupado = true,
                            Pasillo = "B"
                        });
                });

            modelBuilder.Entity("Ventas", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VentaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("DetalleOrdenDeCompras", b =>
                {
                    b.HasOne("OrdenDeCompras", null)
                        .WithMany("DetalleOrdenDeCompras")
                        .HasForeignKey("OrdenDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DetallesCompras", b =>
                {
                    b.HasOne("Compras", null)
                        .WithMany("DetallesCompras")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DetallesVenta", b =>
                {
                    b.HasOne("Ventas", null)
                        .WithMany("detallesVentas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Compras", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("OrdenDeCompras", b =>
                {
                    b.Navigation("DetalleOrdenDeCompras");
                });

            modelBuilder.Entity("Ventas", b =>
                {
                    b.Navigation("detallesVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
